BootStrap: docker
From:neurodebian:buster

%help
  minimal TADbit container

%environment
  LANG=C.UTF-8 
  LC_ALL=C.UTF-8
  PATH="/usr/local/anaconda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
  export PATH LANG LC_ALL

%post

  # for R
  echo "deb-src http://ftp.de.debian.org/debian/ buster main contrib" >> /etc/apt/sources.list

  apt-get update --fix-missing

  apt install -y dirmngr apt-transport-https ca-certificates software-properties-common gnupg2 wget
  apt-key adv --keyserver keys.gnupg.net --recv-key 'E19F5F87128899B192B1A2C2AD5F960A256A04AF'
  add-apt-repository 'deb https://cloud.r-project.org/bin/linux/debian buster-cran35/'

  apt-get update --fix-missing
  apt-get -y install unzip build-essential wget bzip2 libxml2-dev libssl-dev libcurl4-gnutls-dev --no-install-recommends
  
  apt-get -y install r-base r-cran-devtools

  #############################################################################
  # DSRC
  wget --quiet --no-check-certificate https://github.com/refresh-bio/DSRC/releases/download/v2.0.2/dsrc-linux-x64-static.tar.gz &&\
  tar xzvf dsrc-linux-x64-static.tar.gz &&\
  mv bin/dsrc /usr/local/bin && rm -f dsrc-linux-x64-static.tar.gz && chmod +x /usr/local/bin/dsrc

  #############################################################################
  # dryhic / oneD
  R --slave -e 'options(repos="http://cran.rstudio.com/"); devtools::install_github("qenvio/dryhic")'

  #############################################################################
  # conda
  echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh && \
  wget --quiet --no-check-certificate https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh \
      -O $HOME/miniconda.sh
  /bin/bash $HOME/miniconda.sh -b -p /usr/local/anaconda
  rm $HOME/miniconda.sh
  
  export PATH="/usr/local/anaconda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"

  conda config --set always_yes yes --set changeps1 no
  conda update -q conda
  conda info -a

  #############################################################################
  # install python packages
  conda config --add channels salilab && conda config --add channels bioconda && \
  conda config --add channels hargup/label/pypi && conda config --add channels conda-forge
  conda install -y -q imp
  conda install -y -q future
  conda install -y -q scipy
  conda install -y -q numpy
  conda install -y -q mcl
  conda install -y -q matplotlib
  conda install -y -q samtools
  conda install -y -q pysam
  conda install -y -q ucsc-bigWigToBedGraph
  conda install -y -q ucsc-wigtobigwig
  conda install -y -q gem3-mapper
  conda install -y -q hisat2
  # to run jupyter the notebok has to be built and installed as writable (with sudo)
### conda install -y -q jupyter
  conda clean -y --all  && rm -rf /opt/conda/pkgs/*

  #############################################################################
  # GEM
  wget --quiet --no-check-certificate https://sourceforge.net/projects/gemlibrary/files/gem-library/Binary%20pre-release%203/GEM-binaries-Linux-x86_64-core_i3-20130406-045632.tbz2/download -O GEM.tbz2 && \
  tar -xvjf GEM.tbz2 && \
  rm -f GEM-binaries-*/bin/LICENCE && \
  mv GEM-binaries-*/bin/* /usr/local/bin/ && rm -rf GEM*

  #############################################################################
  # TADbit
  wget --quiet --no-check-certificate https://github.com/fransua/TADbit/archive/py3.zip && unzip py3.zip && \
  cd TADbit-py3 && yes | python setup.py install && cd .. && rm -rf TADbit-py3 py3.zip
  
%runscript
  echo "Wecome to TADbit Singularity container"
  exec /bin/bash --norc
  # to run jupyter the notebok has to be built and installed as writable (with sudo)
  # echo "Starting notebook..."
  # echo "Open browser to localhost:8888"
  # exec /opt/conda/bin/jupyter notebook --notebook-dir=/opt/notebooks --ip='*' --allow-root --port=8888 --no-browser
